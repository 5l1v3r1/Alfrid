{"version":3,"names":[],"mappings":"","sources":["bundle.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\n// console.log('alfrid : ', alfrid);\n\n// import glslify from 'glslify';\n\n\nwindow.addEventListener('load', function () {\n\treturn _init();\n});\nvar number = new alfrid.EaseNumber(0, .01);\nvar cnt = 0;\nvar GL = alfrid.GL;\n\nfunction _init() {\n\talfrid.log();\n\n\tvar canvas = document.createElement(\"canvas\");\n\tcanvas.className = 'Main-Canvas';\n\n\tdocument.body.appendChild(canvas);\n\n\tGL.init(canvas);\n\t// alfrid.GL.displayExtensions();\n\n\talfrid.scheduler.addEF(loop);\n\n\tnumber.value = 1;\n\n\t//\tCREATE CAMERA\n\tvar camera = new alfrid.CameraOrtho();\n\tGL.setMatrices(camera);\n\n\t//\tCREATE SHADER\n\tvar shader = new alfrid.GLShader(\"#define GLSLIFY 1\\n// basic.vert\\n\\n#define SHADER_NAME BASIC_VERTEX\\n\\nprecision highp float;\\nattribute vec3 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat4 uMVMatrix;\\nuniform mat4 uPMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void) {\\n    gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\", \"#define GLSLIFY 1\\n// basic.frag\\n\\n#define SHADER_NAME BASIC_FRAGMENT\\n\\nprecision highp float;\\nvarying vec2 vTextureCoord;\\n// uniform sampler2D texture;\\n\\nvoid main(void) {\\n    gl_FragColor = vec4(1.0);\\n}\");\n\tshader.bind();\n\n\t//\tCREATE GEOMETRY\n\n\t//\tRENDER\n\tGL.draw();\n}\n\nfunction loop() {\n\tvar max = 60 * 5;\n\tvar gray = cnt / max;\n\tGL.clear(gray, gray, gray, 1);\n\n\tif (cnt++ > max) {\n\t\twindow.location.href = './';\n\t}\n}\n\n},{}]},{},[1]);\n"],"file":"bundle.js","sourceRoot":"/source/"}